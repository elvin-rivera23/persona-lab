# Optional: a reusable logging config for tidy JSON logs
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

services:
  # ------------------------------
  # FastAPI service (existing app)
  # ------------------------------
  api:
    build: .
    container_name: persona-api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    ports:
      - "8002:8001"
    environment:
      APP_ENV: "dev"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\ntry:\n  urllib.request.urlopen('http://localhost:8001/health',timeout=2).read(); print('ok')\nexcept Exception as e:\n  print(e); sys.exit(1)\nPY"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      worker:
        condition: service_started
    restart: unless-stopped
    logging: *default-logging
    networks:
      - appnet

  # --------------------------------------
  # Background worker with HTTP health
  # --------------------------------------
  worker:
    image: python:3.11-slim
    container_name: persona-worker
    working_dir: /app
    volumes:
      - .:/app:ro
    command: ["python", "-m", "app.worker.health_srv"]
    ports:
      - "8022:8022"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport urllib.request,sys\ntry:\n  urllib.request.urlopen('http://localhost:8022/health',timeout=2).read(); print('ok')\nexcept Exception as e:\n  print(e); sys.exit(1)\nPY"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging: *default-logging
    networks:
      - appnet

  # ---------------------------------------------------------
  # Monitoring placeholder (Nginx stand-in until we add real)
  # Exposed on :8090 to avoid clashes with other stacks.
  # ---------------------------------------------------------
  monitor:
    image: nginx:alpine
    container_name: persona-monitor
    profiles: ["monitoring"]
    ports:
      - "8090:80"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    logging: *default-logging
    networks:
      - appnet

  # ---------------------------------------------------------
  # Test runner (one-shot pytest) — run with: make test
  # ---------------------------------------------------------
  test:
    image: python:3.11-slim
    container_name: persona-test
    profiles: ["test"]
    working_dir: /app
    volumes:
      - .:/app
    environment:
      PYTHONPATH: /app
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
    command: >
      sh -c "
        python -m pip install --quiet --upgrade pip &&
        pip install --quiet -r requirements.txt 2>/dev/null || true &&
        pip install --quiet -r requirements-dev.txt 2>/dev/null || true &&
        pip install --quiet pytest &&
        pytest -q --disable-warnings -x
      "
    networks:
      - appnet

# Named network so services can talk by name (api ↔ worker ↔ monitor ↔ test)
networks:
  appnet:
    driver: bridge
